name: Build and push to Github Container Registry

on:
    push:
        branches:
            - main
            - new-ci

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    # IMAGE_PUSH: ${{ github.ref == 'refs/heads/main' && true || false }} # Only push image if we are on the main branch
    IMAGE_PUSH: true # Always push image
    NODE_VERSION: 20.3

jobs:
    build:
        runs-on: ubuntu-latest
        name: Build
        permissions:
            contents: read
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: yarn
            - name: Install dependencies
              run: yarn install
            - name: Lint
              run: yarn run lint
            - name: Build
              run: yarn run build
            - name: Upload artifact # All the stuff needed to run the app except for node_modules as we need a clean version of that
              uses: actions/upload-artifact@v3
              with:
                  name: dist
                  path: |
                      build
                      Dockerfile
                      yarn.lock
                      package.json
                      assets
                      views
    create-docker-image:
        name: Create Docker image
        runs-on: ubuntu-latest
        needs: build
        permissions:
            contents: read
            packages: write
        steps:
            - name: Download build artifact
              uses: actions/download-artifact@v3
              with:
                  name: dist
                  path: .
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Setup Node.js # We need to install Node.js again as the previous step is not carried over. NO CACHE!
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            - name: Log in to the Container registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: ${{ env.IMAGE_PUSH }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
